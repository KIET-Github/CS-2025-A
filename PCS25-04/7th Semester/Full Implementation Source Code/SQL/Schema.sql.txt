CREATE TABLE transactionitem (
  id SERIAL PRIMARY KEY,
  sale_and_purchase_id INT,
  product_id BIGINT,
  quantity BIGINT NOT NULL,
  sale_price BIGINT,
  CONSTRAINT fk_sale_and_purchase FOREIGN KEY (sale_and_purchase_id) REFERENCES saleandpurchaserecord (id) ON DELETE CASCADE,
  CONSTRAINT fk_product FOREIGN KEY (product_id) REFERENCES product (id) ON DELETE CASCADE
);

CREATE TABLE transaction (
  id BIGSERIAL PRIMARY KEY,
  total_amount DOUBLE PRECISION NOT NULL,
  discount_amount DOUBLE PRECISION DEFAULT 0,
  amount_received DOUBLE PRECISION NOT NULL,
  payment_method_id INT,
  sale_and_purchase_id INT,
  CONSTRAINT fk_payment_method FOREIGN KEY (payment_method_id) REFERENCES paymentmethod (id) ON DELETE SET NULL,
  CONSTRAINT fk_sale_and_purchase FOREIGN KEY (sale_and_purchase_id) REFERENCES saleandpurchaserecord (id) ON DELETE CASCADE
);

CREATE TABLE invoice (
  id SERIAL PRIMARY KEY,
  sale_and_purchase_id INT,
  invoice_number VARCHAR(50) NOT NULL,
  date_issued DATE NOT NULL,
  due_date DATE NOT NULL,
  total_amount DOUBLE PRECISION NOT NULL,
  status TEXT CHECK (status IN ('PAID', 'UNPAID', 'OVERDUE')) NOT NULL,
  CONSTRAINT fk_sale_and_purchase FOREIGN KEY (sale_and_purchase_id) REFERENCES saleandpurchaserecord (id) ON DELETE CASCADE
);

CREATE TABLE saleandpurchaserecord (
  id SERIAL PRIMARY KEY,
  date DATE NOT NULL,
  client_id INT,
  shipping_address VARCHAR(450),
  type TEXT CHECK (type IN ('SALE', 'PURCHASE')) NOT NULL,
  deleted BOOLEAN DEFAULT FALSE,
  user_id INT,
  CONSTRAINT fk_client FOREIGN KEY (client_id) REFERENCES client (id) ON DELETE SET NULL,
  CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES useraccount (id) ON DELETE SET NULL
);

CREATE TABLE paymentmethod (
  id SERIAL PRIMARY KEY,
  name VARCHAR(50) NOT NULL
);

CREATE TABLE errorlog (
  id SERIAL PRIMARY KEY,
  error_message TEXT NOT NULL,
  error_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE product (
  id BIGSERIAL PRIMARY KEY,
  hsn VARCHAR(15) NOT NULL,
  name VARCHAR(45) NOT NULL,
  sale_price DOUBLE PRECISION NOT NULL,
  cost_price DOUBLE PRECISION NOT NULL,
  tax REAL DEFAULT 0,
  quantity BIGINT NOT NULL DEFAULT 0,
  user_id INT NOT NULL,
  deleted BOOLEAN DEFAULT FALSE,
  min_qty BIGINT NOT NULL DEFAULT 0,
  CONSTRAINT fk_user_product FOREIGN KEY (user_id) REFERENCES useraccount (id)
);

CREATE TABLE client (
  id SERIAL PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  gstin VARCHAR(20),
  phone_number VARCHAR(15) NOT NULL,
  email VARCHAR(45),
  address VARCHAR(450) NOT NULL,
  user_id INT NOT NULL,
  to_get DOUBLE PRECISION DEFAULT 0,
  to_pay DOUBLE PRECISION DEFAULT 0,
  notice_period INT,
  deleted BOOLEAN DEFAULT FALSE,
  CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES useraccount (id)
);


CREATE TABLE useraccount (
  id SERIAL PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  gstin VARCHAR(20),
  phone_number VARCHAR(15) NOT NULL UNIQUE,
  email VARCHAR(45) NOT NULL UNIQUE,
  company_name VARCHAR(45) NOT NULL,
  address VARCHAR(450) NOT NULL,
  deleted BOOLEAN DEFAULT FALSE
); 
